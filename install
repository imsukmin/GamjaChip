#!/bin/bash

# Don't use blank if you declear valuable
NGINXROOTPATH="/usr/share/nginx/html/"
NGINXCONFIGPATH="/etc/nginx/sites-available/default"
PHPPATH="/etc/php5/fpm/pool.d/"


clear
echo "########################################"
echo "      Server install script start      "
echo "########################################"


#Check if run as root
if [ "$(whoami)" != "root" ]; then
	echo "ERROR : You must be root to do that!"
	echo "Type : sudo sh install.sh"
	exit 1
fi

echo "########################################"
echo "      set your server account data      "
echo "########################################"

# set installing DATA
# $db = DB name
# $user = user name
# $passwd = Password
# $MysqlRootPASSWORD = mysql root's Password

echo "## WARNING!! : Please input carefully!!" 
read -s -p " RootPASSWORD : " MysqlRootPASSWORD 
echo -n ""
read -p " DBNAME : " db  
echo -n ""
read -p " DBUSER : " user 
echo -n ""
read -s -p " DBPASSWD : " passwd 
echo -n ""
echo "use mysql;" > useradd.sql 
echo "CREATE DATABASE `$db` DEFAULT CHARACTER SET euckr COLLATE euckr_korean_ci;" >> useradd.sql 
echo "insert into user values('localhost', '$user', password('$passwd'), 'N', 'N', 'N', 'N','N', 'N', 'N', 'N', 'N', 'N', 'N', 'N','N', 'N');" >> useradd.sql 
echo "insert into db values ('localhost','$db','$user','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y');" >> useradd.sql 
echo "flush privileges;" >> useradd.sql 

# increse max connection info of mysql
echo "set global max_connections=10000;
SET GLOBAL connect_timeout=28800;
SET GLOBAL wait_timeout=28800;
SET GLOBAL interactive_timeout=28800;" >> useradd.sql

# input sample Database from tables.sql
echo "-- 서버 버전: 5.1.73
-- PHP 버전: 5.3.3

SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";

--
-- 데이터베이스: `$db`
--

USE `$db`;

-- --------------------------------------------------------

--
-- 테이블 구조 `AP`
--

CREATE TABLE IF NOT EXISTS `AP` (
  `index` int(10) NOT NULL COMMENT 'ap Number',
  `macAddress` varchar(17) NOT NULL COMMENT 'macAddress in AP',
  `x` int(10) NOT NULL,
  `y` int(10) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=euckr COMMENT='AP Information';


-- --------------------------------------------------------

--
-- 테이블 구조 `BoothInfo`
--

CREATE TABLE IF NOT EXISTS `BoothInfo` (
  `index` int(13) NOT NULL AUTO_INCREMENT,
  `teamName` varchar(200) NOT NULL COMMENT 'boothName',
  `productName` varchar(200) NOT NULL COMMENT 'productNamename',
  `professor` varchar(20) NOT NULL COMMENT '',
  `member` varchar(20) NOT NULL COMMENT 'member of company',
  `outline` text NOT NULL COMMENT 'outline of product',
  `target` varchar(300) NOT NULL COMMENT 'target Mechine',
  `homepage` varchar(200) NOT NULL COMMENT 'homepage',
  `brochure` text NOT NULL COMMENT 'image',
  `nfcTagId` text NOT NULL COMMENT 'nfc Tag ID Value',
  `hitCount` int(13) NOT NULL DEFAULT '0',
  `apLevel` text NOT NULL COMMENT 'AP signal value',
  `summary` text NOT NULL COMMENT 'summery of product',
  PRIMARY KEY (`index`),
  KEY `index` (`index`)
) ENGINE=MyISAM  DEFAULT CHARSET=euckr COMMENT='Booth Information' AUTO_INCREMENT=1 ;


-- --------------------------------------------------------

--
-- 테이블 구조 `ExhibitionInfo`
--

CREATE TABLE IF NOT EXISTS `ExhibitionInfo` (
  `title` varchar(200) NOT NULL,
  `host` varchar(100) NOT NULL,
  `date` varchar(20) NOT NULL,
  `place` varchar(100) NOT NULL,
  `summary` text NOT NULL,
  `outline` text NOT NULL,
  `map` text NOT NULL,
  `homepage` varchar(200) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=euckr COMMENT='전시회정보관리';

-- --------------------------------------------------------

--
-- 테이블 구조 `hitcount`
--

CREATE TABLE IF NOT EXISTS `hitcount` (
  `index` int(13) NOT NULL,
  `id` varchar(100) CHARACTER SET euckr NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=latin1 COMMENT='조회수';

-- --------------------------------------------------------

--
-- 테이블 구조 `Member`
--

CREATE TABLE IF NOT EXISTS `Member` (
  `index` int(13) NOT NULL AUTO_INCREMENT,
  `id` varchar(100) NOT NULL COMMENT 'ID',
  `password` varchar(100) NOT NULL COMMENT 'Password',
  `name` varchar(50) NOT NULL COMMENT 'User Name',
  `teamName` varchar(200) NOT NULL COMMENT 'Company of User',
  `email` varchar(200) NOT NULL COMMENT 'E-Mail',
  `phone` varchar(13) NOT NULL COMMENT 'CellPhone Number',
  `level` varchar(20) NOT NULL COMMENT 'User Level : admin, user, awaiter',
  PRIMARY KEY (`index`),
  KEY `index` (`index`)
) ENGINE=MyISAM  DEFAULT CHARSET=euckr COMMENT='User Information' AUTO_INCREMENT=2 ;

--
-- 테이블의 덤프 데이터 `Member`
--

INSERT INTO `Member` (`index`, `id`, `password`, `name`, `teamName`, `email`, `phone`, `level`) VALUES
(1, 'admin', PASSWORD('2014hansung'), 'ADMINISTRATOR', 'Smart Exhibition', '', '', 'admin');

-- --------------------------------------------------------

--
-- 테이블 구조 `QnA`
--

CREATE TABLE IF NOT EXISTS `QnA` (
  `index` int(13) NOT NULL AUTO_INCREMENT,
  `title` varchar(300) NOT NULL COMMENT 'title of Question',
  `writer` varchar(50) NOT NULL COMMENT 'Question Owner',
  `date` varchar(10) NOT NULL COMMENT 'Date of Written time',
  `hits` int(11) NOT NULL COMMENT 'How many hit this article',
  `content` text NOT NULL COMMENT 'Content of Question',
  `comment` text NOT NULL COMMENT 'Answer from ADMINISTRATOR',
  PRIMARY KEY (`index`),
  KEY `index` (`index`)
) ENGINE=MyISAM  DEFAULT CHARSET=euckr COMMENT='QnA' AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- 테이블 구조 `visitors`
--

CREATE TABLE IF NOT EXISTS `visitors` (
  `index` int(13) NOT NULL COMMENT 'Booth index',
  `userID` varchar(500) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'User''s id',
  `checkIn` varchar(19) DEFAULT NULL COMMENT 'YYYY:MM:DD:hh:mm:ss'
) ENGINE=MyISAM DEFAULT CHARSET=euckr;

--
-- 테이블의 덤프 데이터 `visitors`
--

INSERT INTO `visitors` (`index`, `userID`, `checkIn`) VALUES
(1, '', ''),
(2, '', ''),
(3, '', ''),
(4, '', ''),
(5, '', ''),
(6, '', ''),
(7, '', ''),
(8, '', ''),
(9, '', ''),
(10, '', ''),
(11, '', ''),
(12, '', ''),
(13, '', ''),
(14, '', ''),
(15, '', ''),
(16, '', ''),
(17, '', ''),
(18, '', ''),
(19, '', ''),
(20, '', ''),
(21, '', ''),

" >> tables.sql


#################################
###       clone project       ###
#################################

## Before install.... do this!

## apt-get install git
## git clone https://github.com/imsukmin/GamjaChip.git


#################################
###    Register tool's ppa    ###
#################################
# 1. add repository of NginX
add-apt-repository -y ppa:nginx/development

# 2. add repository of node.js
add-apt-repository -y ppa:chris-lea/node.js

# 3. apply ppa
apt-get update

clear
echo "########################################"
echo "          apt-get install START         "
echo "########################################"

#################################
###       install NginX       ###
#################################

# aptitude ==> install tool seems like apt-get
apt-get -y install aptitude
aptitude -y install software-properties-common
apt-get -y install nginx

#################################
###  install MySql and php5   ###
#################################

# Beforehead, set Mysql root Password use "debconf-set-selections"
echo mysql-server mysql-server/root_password password $MysqlRootPASSWORD | sudo debconf-set-selections
echo mysql-server mysql-server/root_password_again password $MysqlRootPASSWORD | sudo debconf-set-selections

apt-get -y install mysql-server 
apt-get -y install mysql-client

# When php-fpm install, php5 will install too.
apt-get -y install php5-fpm

# install php5 module
apt-get -y install php5-cli php5-mcrypt php5-gd

# pairing php-fpm and mysql 
apt-get -y install php5-mysql

# execute sql query basic before input's
mysql -u root -p$MysqlRootPASSWORD < useradd.sql

# execute sql query basic tables

mysql -u root -p$MysqlRootPASSWORD < tables.sql

# delete data file
rm -rf useradd.sql

#################################
### NginX - PHP collaboration ###
#################################

# 1. change php5-fpm config 
cp /etc/php5/fpm/pool.d/www.conf configFile/www.conf-original

##### changed infomation ##### 
## ; Note: This value is mandatory.
## ;listen = 127.0.0.1:9000
## listen = /dev/shm/php5-fpm.sock
mv -f configFile/www.conf /etc/php5/fpm/pool.d/www.conf

# 2. php5-fpm restart
/etc/init.d/php5-fpm restart

# 3. change nginx config 
cp /etc/nginx/sites-available/default configFile/default-original

##### changed infomation ##### 
### pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
##location ~ \.php$ {
##                fastcgi_split_path_info ^(.+\.php)(/.+)$;
##                # NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
##
##                # With php5-cgi alone:
##                # fastcgi_pass 127.0.0.1:9000;
##                # With php5-fpm:
##                fastcgi_pass unix:/dev/shm/php5-fpm.sock;
##                fastcgi_index index.php;
##                include fastcgi_params;
##        }
mv -f configFile/default /etc/nginx/sites-available/default

# 4. check nginx configuration
nginx -t 

# 5. nginx setting complete and reload
nginx -s reload

#################################
###      install node.js      ###
#################################

# 1. install tools to install node.js
apt-get -y install python-software-properties python g++ make

# 2. install node.js
apt-get -y install nodejs
# 3. install node's modules
npm install -g express
npm install -g express-generator
npm install -g mysql
npm install -g socket.io

#################################
###     making config.js      ###
#################################
echo "var config = {}"  > config.js
echo "// make namespace"  >> config.js
echo "config.db = {};"  >> config.js
echo " "  >> config.js
echo "// register data in config.db"  >> config.js
echo "config.db.host = $user;"  >> config.js
echo "config.db.password = $passwd;"  >> config.js
echo "config.db.dbname = $db;"  >> config.js
echo "config.db.port = 3000;"  >> config.js
echo " "  >> config.js
echo "module.exports = config;"  >> config.js

mv config.js server/config.js

#################################
###    install node server    ###
#################################
## use recursive plag
cp -r server/ $NGINXROOTPATH

#################################
###    install Web Manager    ###
#################################
## use recursive plag
cp -r www/ $NGINXROOTPATH

cd $NGINXROOTPATH

echo "########################################"
echo "       Server install script end       "
echo "########################################"